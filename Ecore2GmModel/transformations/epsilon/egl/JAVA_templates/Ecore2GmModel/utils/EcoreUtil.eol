
@cached
operation EAnnotation getDetail(key : String) : String {
	var detail := self.details.selectOne(d|d.key = key);
	if (detail.isDefined()) {return detail.value;}
	else {return null;}
}

operation EModelElement getAnnotationValue(name : String, detail : String) : Any {
	var ann := self.eAnnotations.selectOne(a|a.source = name);
	var det;

	if (ann.isDefined()) {
		det := ann.details.selectOne(d|d.key = detail);
	}

	if (det.isDefined()) {
		return det.value;
	}
	else if (self.isTypeOf(EClass)) {
		for (s in self.eSuperTypes) {
			var sann := s.getAnnotationValue(name, detail);
			if (sann.isDefined()) {
				return sann;
			}
		}
	}
	return det;	
}

operation EModelElement getOwnedAnnotationValue(name : String, detail : String) : Any {
	var ann := self.eAnnotations.selectOne(a|a.source = name);
	var det;

	if (ann.isDefined()) {
		det := ann.details.selectOne(d|d.key = detail);
	}

	if (det.isDefined()) {
		return det.value;
	}
	return det;	
}

@cached
operation EModelElement getAnnotation(name : String) : EAnnotation {
	
	var ann := self.eAnnotations.selectOne(a|a.source = name);
	
	if (self.isTypeOf(EClass) and ann.isUndefined()) {
		for (s in self.eSuperTypes) {
			var sann := s.getAnnotation(name);
			if (sann.isDefined()) return sann;
		}
	}
	return ann;
	
}

@cached
operation EModelElement getOwnedAnnotation(name : String) : EAnnotation {
	
	var ann := self.eAnnotations.selectOne(a|a.source = name);
	return ann;
	
}

@cached
operation EModelElement isAnnotatedAs(name : String) : Boolean {
	return self.getAnnotation(name).isDefined();
}

@cached
operation EModelElement isSelfAnnotatedAs(name : String) : Boolean {
	return self.getOwnedAnnotation(name).isDefined();
}
